version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-workflow-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ai_workflow_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-workflow-net

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-workflow-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-workflow-net

  # AI Workflow System (Rust)
  ai-workflow-system:
    build:
      context: .
      dockerfile: Dockerfile.simple
      platforms:
        - linux/arm64
    container_name: ai-workflow-system
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-ai_workflow_db}
      REDIS_URL: redis://redis:6379
      HOST: 0.0.0.0
      PORT: 8080
      RUST_LOG: ${RUST_LOG:-info,workflow_engine=debug}
      JWT_SECRET: ${JWT_SECRET:-your-secure-jwt-secret-key-change-in-production}
      # AI Provider Keys (optional)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
    ports:
      - "${API_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-workflow-net

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:8080}
    container_name: ai-workflow-frontend
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    depends_on:
      - ai-workflow-system
    networks:
      - ai-workflow-net

networks:
  ai-workflow-net:
    driver: bridge

volumes:
  postgres_data: