[package]
name = "mcp_integration_example"
version = "0.1.0"
edition = "2021"
description = "Model Context Protocol integration example with multi-transport support"

[[bin]]
name = "mcp_integration"
path = "src/main.rs"

[[example]]
name = "mcp_client"
path = "examples/mcp_client.rs"

[[example]]
name = "multi_transport"
path = "examples/multi_transport.rs"

[[example]]
name = "connection_pooling"
path = "examples/connection_pooling.rs"

[[example]]
name = "error_resilience"
path = "examples/error_resilience.rs"

[dependencies]
# Core workflow engine dependencies
workflow-engine-core = { path = "../../crates/workflow-engine-core", features = ["monitoring"] }
workflow-engine-mcp = { path = "../../crates/workflow-engine-mcp", features = ["connection-pool", "load-balancer"] }
workflow-engine-nodes = { path = "../../crates/workflow-engine-nodes" }

# Async runtime
tokio = { version = "1.0", features = ["full"] }
futures = "0.3"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# HTTP client for HTTP transport
reqwest = { version = "0.11", features = ["json", "stream"] }

# WebSocket support
tokio-tungstenite = { version = "0.20", features = ["native-tls"] }

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# UUID generation
uuid = { version = "1.0", features = ["v4", "serde"] }

# URL parsing
url = "2.4"

# Configuration
config = "0.13"

# Process management for stdio transport
tokio-process = "0.2"

# Metrics and monitoring
prometheus = { version = "0.13", optional = true }

[dev-dependencies]
# Testing
tokio-test = "0.4"
mockall = "0.11"
wiremock = "0.5"

# Integration testing
reqwest = { version = "0.11", features = ["json"] }

[features]
default = ["prometheus"]
prometheus = ["dep:prometheus", "workflow-engine-core/monitoring"]